[alias]

    # ================ #
    # NATIVE SHORTCUTS #
    # ================ #

    ## Tip for Alias Commands
    ## If the alias uses positional arguments ($1, $2, etc) make sure that you
    # end the command (;) and comment out anything that could be prepended to
    # the end of the command (#).

    # Keystroke Savers
    s           = status -s
    st          = status
    co          = checkout
    fa          = fetch --all
    ft          = fetch --tags
    force       = push --force-with-lease --force-if-includes

    # Useful Tools
    line        = log --abbrev-commit --find-renames --decorate=auto --pretty=format:'%C(red)%h%C(reset)\t%C(green)%<(14)%cr%C(reset)%C(yellow)%d%C(reset) %s %C(blue)<%an>%C(reset)'
    history     = line --follow --
    # See: https://github.com/paulirish/git-recent/blob/master/git-recent
    recent      = !git for-each-ref --color=always --count=15 --sort=-committerdate 'refs/heads/' --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset)|%(color:bold red)%(objectname:short)%(color:reset) %(color:bold green)(%(committerdate:relative))%(color:reset)|%(color:bold blue)%(authorname)%(color:reset) %(color:yellow)%(upstream:track)%(color:reset)%(color:black) %(color:reset)|%(contents:subject)%(color:black) %(color:reset)|' | column -ts '|'  | less --tabs=4 --quit-if-one-screen --RAW-CONTROL-CHARS --no-init
    # Delete any branches that have been merged into "main" branch (the default
    # branch for Git repositories on GitHub and GitLab).
    # N.B. You should fetch latest "main" commits first. Plus be careful; command
    # very similar to "merge".
    merged        = "!git checkout "${1:-main}" && git pull && git branch --merged \"${1:-main}\" | grep -v \"\\*\" | xargs --no-run-if-empty git branch -d; #"

    # Hide changed files in the working tree from Git, like ".gitignore" for
    # committed files. Ideal for edits in configuration that shouldn't be committed.
    hide        = update-index --assume-unchanged
    unhide      = update-index --no-assume-unchanged
    unhide-all  = update-index --really-refresh
    hidden      = "!git ls-files -v | grep ^h | cut -c 3-"

    # Committing Shortcuts
    recommit    = commit --amend --no-edit --date=now
    uncommit    = reset --soft HEAD^
    amend       = commit --amend --date=now
    # Rebase Shortcuts
    continue    = rebase --continue
    skip        = rebase --skip
    abort       = rebase --abort

    # Misc
    root        = rev-parse --show-toplevel
    versions    = "!git tag | grep \"^[vV]\\?[0-9.]\\+$\" | sort -V"
    ignored     = "!git -C \"$GIT_PREFIX\" status -s --ignored \"$@\" | grep \"^!!\" | cut -c 4-"
    # Pull Requests from GitHub (eg, "git review 21604")
    # For some reason, the additional arguments after the alias name get echoed
    # to the end of the command; add a comment at the end to prevent errors.
    pr          = "!git fetch -fu \"${2:-origin}\" \"refs/pull/${1}/head:pr/${1}\" && git checkout \"pr/${1}\"; #"
    reviewed    = "!git branch | grep \"^  pr/\" | xargs --no-run-if-empty git branch -D"
    # Prepush opens up an interactive rebase for all the changes that haven't
    # been pushed to the remote upstream branch yet.
    prepush     = rebase -i @{u}

    # Unhelpful Tools
    yolo = '!git commit -m "$(curl -sfL "https://whatthecommit.com/index.txt")"'

[user]
    name = Zan Baldwin
    email = hello@zanbaldwin.com
	signingkey = 8487AAE3D763501F
[init]
	defaultBranch = main
[push]
    default     = simple
    followTags  = true
	autoSetupRemote = true
	recurseSubmodules = check
[pull]
    rebase = true
[rebase]
    autoStash = true
[pager]
    # "diff-highlight" isn't installed by default, you can find it in the
    # contrib section of the Git repo (requires Perl to be installed):
    # https://github.com/git/git/tree/master/contrib/diff-highlight

    # Delta diff tool: https://github.com/dandavison/delta
    log         = delta
    show        = delta
    diff        = delta
[interactive]
    diffFilter  = delta --color-only --features=interactive
[diff]
    compactionHeuristic = true
    algorithm           = patience
    mnemonicprefix      = true
    colorMoved          = default
[rerere]
    # Remember my merges
    # http://gitfu.wordpress.com/2008/04/20/git-rerere-rereremember-what-you-did-last-time/
    enabled     = true
[help]
    autocorrect = 1
[core]
    excludesFile = "~/.config/git/global-ignore"
    editor       = "nano -AES --tabsize=4"

# Force Git to always download over SSH to prevent GitHub's API throttling and/or
# asking for username and password (which is near-to-impossible to do on the
# command-line if 2FA has been enabled). This is a massive pain when you're cloning
# repositories on a machine you haven't set SSH up on yet.
#[url "git@github.com:"]
#    insteadOf  = https://github.com/
[merge]
#    ff         = only

[delta]
    features = unobtrusive-line-numbers decorations
    side-by-side = false
    color-only = false
    light = false
[delta "interactive"]
    keep-plus-minus-markers = false
[delta "decorations"]
    commit-style = raw
    file-style = file
    file-decoration-style = box bold ul
    hunk-header-style = omit
    plus-style = darkgrey darkgreen
[delta "unobtrusive-line-numbers"]
    line-numbers = true
    line-numbers-minus-style = "#802928"
    line-numbers-zero-style = "#888888"
    line-numbers-plus-style = darkgreen
    line-numbers-left-format = "{nm:>4}┊"
    line-numbers-right-format = "{np:>4}│"
[commit]
	gpgsign = false
	template = "~/.config/git/commit-template.txt"
[gui]
	pruneduringfetch = true
[smartgit "submodule"]
	fetchalways = false
	update = true
	initializenew = true
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
