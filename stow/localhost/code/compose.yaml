# Running on Podman? Do not run in rootless.
# DOCKER_HOST=unix:///run/podman/podman.sock sudo docker-compose up -d

version: '3.8'
x-logging:
  &default-logging
    driver: 'json-file'
    options:
        max-size: '5m'
        max-file: '1'

services:
    proxy-manager:
        image: 'jc21/nginx-proxy-manager:${PROXY_MANAGER_VERSION:-latest}'
        # When using Podman, containers only get restarted after a reboot if
        # the restart policy is set to "always". Do not use "unless-stopped".
        restart: 'always'
        logging: *default-logging
        healthcheck:
            test: [ "CMD", "/bin/check-health" ]
            interval: 10s
            timeout: 3s
        network_mode: 'host'
        ports:
            - target: 80
              published: 80
              protocol: 'tcp'
              mode: 'host'
            - target: 443
              published: 443
              protocol: 'tcp'
              mode: 'host'
            - target: 81
              published: 81
              protocol: 'tcp'
              mode: 'host'
        volumes:
            - type: 'volume'
              source: 'config'
              target: '/data'
              read_only: false
            - type: 'volume'
              source: 'certs'
              target: '/etc/letsencrypt'
              read_only: false

    mailhog:
        image: 'mailhog/mailhog:${MAILHOG_VERSION:-latest}'
        restart: 'always'
        logging: *default-logging
        network_mode: 'host'
        ports:
            - target: 1025
              published: 1025
              protocol: 'tcp'
              mode: 'host'
            - target: 8025
              published: 8025
              protocol: 'tcp'
              mode: 'host'

    ollama:
        image: 'ollama/ollama'
        restart: 'always'
        logging: *default-logging
        environment:
            OLLAMA_HOST: '0.0.0.0:11434'
            OLLAMA_ORIGINS: 'http://localhost,https://ollama.test'
        ports:
            - target: 11434
              published: 11434
              protocol: 'tcp'
              mode: 'host'
        volumes:
            # - type: 'bind'
            #   source: '/home/zan/.local/share/ollama'
            #   target: '/root/.ollama'
            #   read_only: false
            # Docker Compose does not allow setting the `:z` flag in long-form syntax.
            - '/home/zan/.local/share/ollama:/root/.ollama:z,rw'

    openwebui:
        image: 'ghcr.io/open-webui/open-webui:main'
        restart: 'always'
        logging: *default-logging
        network_mode: 'host'
        environment:
            PORT: 6554
        ports:
            - target: 6554
              published: 6554
              protocol: 'tcp'
              mode: 'host'
        volumes:
            - type: 'volume'
              source: 'ollama'
              target: '/app/backend/data'
              read_only: false
        extra_hosts:
            - 'host.docker.internal:host-gateway'

    jupyter:
        # You may need to build image manually first before Compose Up due to
        # symlink targets being outside of the context (on Podman, this must be
        # run as the same user you plan on using with Compose Up):
        # [sudo] docker build --tag "zanbaldwin.com/localhost/jupyter" --format="docker" jupyter/Containerfile
        image: 'zanbaldwin.com/localhost/jupyter'
        build:
            context: './jupyter'
            dockerfile: 'Containerfile'
        restart: 'always'
        logging: *default-logging
        ports:
            - target: 8888
              published: 58798
              protocol: 'tcp'
              mode: 'host'
        volumes:
            - type: 'bind'
              source: './'
              target: '/srv'
              read_only: false
        working_dir: '/srv'

volumes:
    config:
        driver: 'local'
    certs:
        driver: 'local'
    ollama:
        driver: 'local'
