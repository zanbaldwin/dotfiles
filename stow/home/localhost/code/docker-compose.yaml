# Running on Podman? Do not run in rootless.
# DOCKER_HOST=unix:///run/podman/podman.sock sudo docker-compose up -d

version: '3.8'
x-logging:
  &default-logging
    driver: 'json-file'
    options:
        max-size: '5m'
        max-file: '1'

services:
    proxy-manager:
        image: 'jc21/nginx-proxy-manager:${PROXY_MANAGER_VERSION:-latest}'
        # When using Podman, containers only get restarted after a reboot if
        # the restart policy is set to "always". Do not use "unless-stopped".
        restart: 'always'
        logging: *default-logging
        healthcheck:
            test: [ "CMD", "/bin/check-health" ]
            interval: 10s
            timeout: 3s
        network_mode: 'host'
        ports:
            - target: 80
              published: 80
              protocol: 'tcp'
              mode: 'host'
            - target: 443
              published: 443
              protocol: 'tcp'
              mode: 'host'
            - target: 81
              published: 81
              protocol: 'tcp'
              mode: 'host'
        volumes:
            - type: 'volume'
              source: 'config'
              target: '/data'
              read_only: false
            - type: 'volume'
              source: 'certs'
              target: '/etc/letsencrypt'
              read_only: false

    mailhog:
        image: 'mailhog/mailhog:${MAILHOG_VERSION:-latest}'
        restart: 'always'
        logging: *default-logging
        network_mode: 'host'
        ports:
            - target: 1025
              published: 1025
              protocol: 'tcp'
              mode: 'host'
            - target: 8025
              published: 8025
              protocol: 'tcp'
              mode: 'host'

    mitm:
        image: 'mitmproxy/mitmproxy:${MITM_VERSION:-latest}'
        restart: 'always'
        logging: *default-logging
        network_mode: 'host'
        command:
            - 'mitmweb'
            - '--listen-host=0.0.0.0'
            - '--listen-port=8080'
            - '--web-host=0.0.0.0'
            - '--web-port=8081'
            - '--showhost'
            - '--no-web-open-browser'
            - '--http2'
        ports:
            - target: 8080
              published: 8080
              protocol: 'tcp'
              mode: 'host'
            - target: 8081
              published: 8081
              protocol: 'tcp'
              mode: 'host'


volumes:
    config:
        driver: 'local'
    certs:
        driver: 'local'
