(defpoll USERNAME :initial "" :interval "1h" `whoami`)
(defpoll HOSTNAME :initial "" :interval "1h"  `hostname`)
(defpoll FULLNAME :initial "" :interval "1h" `getent passwd "$USERNAME" | cut -d':' -f5 | cut -d',' -f1`)
(defpoll UPTIME :initial "" :interval "1s" `uptime --pretty | sed 's/up //g'`)

(deflisten workspaces :initial "[]" "bash ./scripts/get-workspaces.sh")
(deflisten current_workspace :initial "1" "bash ./scripts/get-active-workspace.sh")
(defwidget workspaces []
  (eventbox :onscroll "bash ./scripts/change-active-workspace.sh {} ${current_workspace}" :class "workspaces-widget"
    (box :space-evenly false
      (label :text "${workspaces}${current_workspace}" :visible false)
      (box :class "workspaces-title" (label :text "Workspaces"))
      (for workspace in workspaces
        (eventbox :onclick "hyprctl dispatch workspace ${workspace.id}"
          (box
            :class "workspace-entry ${workspace.id == current_workspace ? "current" : ""} ${workspace.windows > 0 ? "occupied" : "empty"}"
            (label :geometry (geometry :width "20px" :height "20px") :text "${workspace.id}")
          )
        )
      )
    )
  )
)

(deflisten window :initial "..." "bash ./scripts/get-window-title.sh")
(defwidget window_title []
  (box
    (label :text "${window}")
  )
)

(defpoll DATE :initial "" :interval "1m" `date "+%A, %-d %b, %Y"`)
(defpoll TIME :initial "" :interval "3s" `date "+%H:%M"`)
(defpoll TIMEZONE :initial "" :interval "1h" `date "+%Z"`)
(defwidget clock []
  (box
    :space-evenly false
    :geometry (geometry :anchor "top right")
    :class "clock"
    :halign "end"
    (label :class "date" :text "${DATE}")
    (label :class "separator" :text "@")
    (label :class "time" :text "${TIME}")
    (label :class "timezone" :text "${TIMEZONE}")
  )
)

(defpoll SONG :initial "" :interval "1s" `spt playback --status --format '"%t" by %a'`)
(defwidget music []
  
  (box :class "music" :visible (not (string= SONG ""))
    (box :class "info"
      (button :class "song" :onclick "/usr/bin/flatpak run --branch=stable --arch=x86_64 --command=spotify --file-forwarding com.spotify.Client" "${SONG}")
    )
    (box :class "controls"
      (button :class "previous" :onclick "spt playback --previous" "󰒮")
      (button :class "playpause" :onclick "spt playback --toggle" "󰐎")
      (button :class "next" :onclick "spt playback --next" "󰒭")
    )
  )
)

(defwidget system []
  (box
    :space-evenly false
    :geometry (geometry :anchor "top right")
    :class "system"
    :halign "end"
    (music)
    (clock)
  )
)

(defwidget statusbar []
  (box :class "statusbar"
    (workspaces)
    (window_title)
    (system)
  )
)

(defwindow statusbar-left
  :monitor 0
  :windowtype "dock"
  :geometry (geometry
    :x "0%"
    :y "0%"
    :width "100%"
    :height "40px"
    :anchor "top center"
  )
  :reserve (struts :side "top" :distance "4%")
  :borderless true
  :always-on-top true
  :visible true
  :exclusive true
  (statusbar)
)

(defwindow statusbar-right
  :monitor 1
  :windowtype "dock"
  :geometry (geometry
    :x "0%"
    :y "0%"
    :width "100%"
    :height "40px"
    :anchor "top center"
  )
  :reserve (struts :side "top" :distance "4%")
  :borderless true
  :always-on-top true
  :visible true
  :exclusive true
  (statusbar)
)
