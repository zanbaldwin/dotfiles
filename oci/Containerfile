ARG VERSION="${VERSION:-40}"
ARG VARIANT="${VARIANT:-silverblue}"
# Fedora 39 is the first to officially ship as an OCI image; before then the
# unofficial images could be found at "quay.io/fedora-ostree-desktops/${VARIANT}".
# At some point, they should start hosting images on "registry.fedoraproject.org/fedora/fedora-${VARIANT}".
ARG IMAGE="${IMAGE:-quay.io/fedora/fedora-${VARIANT}}"

# ======================= RUST ======================= #
# Rust is needed to build binaries for both Gnome and  #
# Custom Linux kernel environments.                    #
# ==================================================== #
FROM "fedora:${VERSION}" AS rust
RUN dnf install --assumeyes \
        cmake \
        curl \
        gcc \
        g++ \
        git \
 && curl --proto "=https" --tlsv1.2 -sSf "https://sh.rustup.rs" >"/tmp/rustup.sh" \
 && sh /tmp/rustup.sh -qy

# === RUST === #
FROM rust AS alacritty
RUN dnf install --assumeyes fontconfig-devel
# There's absolutely no way I'm settling for Gnome Terminal as my default console.
# TODO: Migrate to Kitty for better rendering, such as ligatures.
RUN source "${HOME}/.cargo/env" \
 && git clone "https://github.com/alacritty/alacritty.git" --branch "v0.13.0" "/tmp/alacritty" \
 && (cd "/tmp/alacritty"; cargo build --release --features "wayland") \
 && mkdir -p "/opt/alacritty/bin" "/opt/alacritty/etc/bash_completion.d" "/opt/alacritty/share/pixmaps" "/opt/alacritty/share/applications" \
 && cp "/tmp/alacritty/target/release/alacritty" "/opt/alacritty/bin/alacritty" \
 && cp "/tmp/alacritty/extra/logo/alacritty-term.svg" "/opt/alacritty/share/pixmaps/Alacritty.svg" \
 && cp "/tmp/alacritty/extra/linux/Alacritty.desktop" "/opt/alacritty/share/applications/alacritty.desktop" \
 && cp "/tmp/alacritty/extra/completions/alacritty.bash" "/opt/alacritty/etc/bash_completion.d/alacritty" \
 && rm -rf "/tmp/alacritty"

FROM "fedora:${VERSION}" AS secure-boot
RUN dnf install --assumeyes openssl \
 && mkdir -p "/opt/secureboot" \
 && openssl req -new -x509 -newkey "rsa:4096" -nodes -days 36500 \
        -outform DER -out "/opt/secureboot/certificate.der" \
        -keyout "/opt/secureboot/key.pem" \
        -subj "/CN=${NAMESPACE}/" \
 && openssl pkcs12 -export -out "/opt/secureboot/key.p12" -inkey "/opt/secureboot/key.pem" -in "/opt/secureboot/cert.der"

FROM rust AS kernel
# Dependencies
RUN source "/etc/os-release" \
 && git clone --depth=1 --branch="f${VERSION_ID}" "https://src.fedoraproject.org/rpms/kernel.git" "/tmp/fedpkg" \
 && dnf install --assumeyes \
        'dnf-command(builddep)' \
        clang-devel \
        fedpkg \
        gcc-c++ \
        git \
        libXi-devel \
        lld \
        make \
        ncurses-devel \
        perl \
        qt3-devel \
        rsync \
 && dnf builddep --assumeyes "/tmp/fedpkg/kernel.spec"
# Sources
# There doesn't seem to be a good way of applying Fedora-specific patches, on top of the Linux kernel Git repository.
# The "approxpriate" command `fedpkg local` doesn't allow you to specify a custom directory to build from and uses
# `fedpkg sources` to download a fresh copy of the Linux kernel seemingly a version behind the latest (and it takes
# FUCKING AGES. Like 30 minutes to download ~135MiB ages).
ARG LINUX_GIT_REPO="git://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable.git"
RUN export LINUX_LATEST_VERSION="$(git -c 'versionsort.suffix=-' ls-remote --tags --sort='v:refname' "${LINUX_GIT_REPO}" \
       | \grep -v '\^' \
       | \grep -P -e '\d+\.\d+' \
       | \grep -P -v 'alpha|ALPHA|beta|BETA|rc|RC|-' \
       | cut -d'/' -f3 \
       | sort --version-sort \
       | tail -n1)" \
 && echo "Latest stable version of Linux Kernel is ${LINUX_LATEST_VERSION}" \
 && git clone --depth=1 --branch="${LINUX_LATEST_VERSION}" "${LINUX_GIT_REPO}" "/tmp/linux"
# Setup
RUN source "${HOME}/.cargo/env" \
 && export LINUX_RUST_VERSION="$("/tmp/linux/scripts/min-tool-version.sh" rustc)" \
 && rustup toolchain add "${LINUX_RUST_VERSION}" \
 && rustup component add --toolchain="${LINUX_RUST_VERSION}" "rust-src" \
 && rustup override set --path="/tmp/linux" "${LINUX_RUST_VERSION}" \
 && cargo install --locked --version "$("/tmp/linux/scripts/min-tool-version.sh" bindgen)" "bindgen-cli"
 # Custom Kernel Configuration
COPY "custom_kernel.config" "/tmp/custom_kernel.config"
COPY "patches" "/tmp/patches"
# Configure Kernel
RUN source "${HOME}/.cargo/env" \
 && cd "/tmp/linux" \
 && sed -i -E "s/^.*CONFIG_RUSTC_VERSION_TEXT.*$/CONFIG_RUSTC_VERSION_TEXT=\"$(rustc --version)\"/g" "/tmp/custom_kernel.config" \
 && sed -i -E "s/^.*CONFIG_BINDGEN_VERSION_TEXT.*$/CONFIG_BINDGEN_VERSION_TEXT=\"$(bindgen --version)\"/g" "/tmp/custom_kernel.config" \
 && KCONFIG_CONFIG="/tmp/kernel-custom-build.config" bash "/tmp/linux/scripts/kconfig/merge_config.sh" \
        "/tmp/fedpkg/kernel-$(uname -m)-fedora.config" \
        "/tmp/custom_kernel.config" \
 && sed -i 's/^EXTRAVERSION.*/EXTRAVERSION = -zanbaldwin/g' "/tmp/linux/Makefile" \
 && git config user.name "Zan Baldwin (Container Build)" \
 && git config user.email "hello+build@zanbaldwin.com" \
 && git -C "/tmp/linux" am /tmp/patches/*.patch
# Build Kernel
RUN source "${HOME}/.cargo/env" \
 && git -C "/tmp/linux" clean -d -f -x \
 && mv "/tmp/kernel-custom-build.config" "/tmp/linux/.config" \
 && echo "Building Linux kernel version '$(make -C "/tmp/linux" --no-print-directory kernelversion)'." \
 && make -C "/tmp/linux" -j "$(nproc --all)" rpm-pkg

# ===================== #
#                       #
#     Custom Kernel     #
#    (extends GMOME)    #
#                       #
# ===================== #
FROM gnome AS linux
COPY --from="kernel" "/opt/kernel" "/opt/kernel"
RUN rpm-ostree override replace /opt/kernel/*.rpm

# ================ #
#                  #
#       GNOME      #
#     (default)    #
#                  #
# ================ #
FROM "${IMAGE}:${VERSION}" AS gnome
COPY "./usr/" "/usr/"
RUN rpm-ostree install --idempotent --allow-inactive --releasever="${VERSION}" \
       bridge-utils edk2-ovmf guestfs-tools libvirt qemu-kvm virt-install virt-manager \
       podman-docker podman-tui containernetworking-plugins aardvark-dns \
       distrobox ffmpeg-free fzf make ncdu nss-tools tlp tlp-rdw \
 && systemctl enable "libvirtd" \
 && systemctl enable "podman.service" \
 && systemctl enable "podman.socket" \
 && systemctl enable "podman-restart.service" \
 && systemctl enable "flatpak-update.service" \
 && (systemctl enable "tlp.service" || true) \
 && if grep "secure_path" "/etc/sudoers" >"/dev/null" 2>&1; then \
       cat "/etc/sudoers" | grep -v "secure_path" | tee "/etc/sudoers" >"/dev/null" 2>&1; \
    fi \
 && sed -i -E "s/^#HandleLidSwitchExternalPower=.*$/HandleLidSwitchExternalPower=ignore/g" "/usr/lib/systemd/logind.conf" \
 && rm -rf /tmp/* /var/* \
 && ostree container commit
COPY --from="alacritty" "/opt/alacritty/" "/usr/"
